version: 2.1

orbs:
  # (Optional) If you need language-specific orbs, declare them here

jobs:
  # ----------------------------------------------------------------------
  # 1) Build and Create SBOM
  # ----------------------------------------------------------------------
  build_and_create_sbom:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout

      # (Optional) Install project dependencies
      # e.g. Node: npm install
      # e.g. Python: pip install -r requirements.txt
      # etc.

      - run:
          name: "Install Syft (User Directory)"
          command: |
            mkdir -p "$HOME/.local/bin"
            curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
              | sh -s -- -b "$HOME/.local/bin"
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV

      - run:
          name: "Generate SBOM"
          command: |
            # Generate a CycloneDX JSON SBOM of the source code
            syft . -o cyclonedx-json > sbom.json

      # Persist the entire project workspace (including sbom.json)
      # so subsequent jobs can:
      #  - Use sbom.json for vulnerability scanning
      #  - Rescan the code for license info
      - persist_to_workspace:
          root: .
          paths:
            - .

  # ----------------------------------------------------------------------
  # 2) Scan SBOM for Vulnerabilities (via Grype)
  # ----------------------------------------------------------------------
  scan_vulnerabilities:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .

      - run:
          name: "Install Grype (User Directory)"
          command: |
            mkdir -p "$HOME/.local/bin"
            curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh \
              | sh -s -- -b "$HOME/.local/bin"
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV

      - run:
          name: "Scan SBOM"
          command: |
            # Print Grype results in a human-readable table
            grype sbom:sbom.json -o table

            # Also generate a JSON report for deeper analysis
            grype sbom:sbom.json -o json > grype-report.json

      - store_artifacts:
          path: grype-report.json
          destination: grype-report.json

  # ----------------------------------------------------------------------
  # 3) License Compliance Check
  # ----------------------------------------------------------------------
  license_compliance_check:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .

      - run:
          name: "Install Syft (User Directory)"
          command: |
            mkdir -p "$HOME/.local/bin"
            curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
              | sh -s -- -b "$HOME/.local/bin"
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV

      - run:
          name: "Check Licenses"
          command: |
            # IMPORTANT: Scan the actual source code (i.e. ".") for license data
            # Scanning sbom.json won't show license data, as it's not re-parsable for license detection
            syft . -o json > sbom-license-info.json

            # Simple example: disallow "GPL-3.0-or-later"
            if grep -q "GPL-3.0-or-later" sbom-license-info.json; then
              echo "ERROR: Found disallowed GPL-3.0-or-later license!"
              exit 1
            else
              echo "License check passed (no disallowed licenses found)."
            fi

      - store_artifacts:
          path: sbom-license-info.json
          destination: sbom-license-info.json

workflows:
  version: 2
  build-and-scan-workflow:
    jobs:
      - build_and_create_sbom
      - scan_vulnerabilities:
          requires:
            - build_and_create_sbom
      - license_compliance_check:
          requires:
            - build_and_create_sbom
